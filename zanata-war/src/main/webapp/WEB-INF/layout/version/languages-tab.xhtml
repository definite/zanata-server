<ui:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:s="http://jboss.org/schema/seam/taglib"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:zanata="http://java.sun.com/jsf/composite/zanata"
  xmlns:a4j="http://richfaces.org/a4j"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:rich="http://richfaces.org/rich">

<script type="text/javascript">
  function downloadAllFilesClick() {
    if (confirm("#{messages['jsf.iteration.files.ConfirmDownloadAllFiles']}")) {
      #{rich:component('downloadProgressPanel')}
    .
      show();
      return true;
    }
    else {
      return false;
    }
  }

  function openUploadPanel(docId) {
    #{rich:element('uploadPanelHeader')}
  .
    innerHTML = '#{messages['jsf.iteration.files.UploadFile']}: ' + docId;
    #{rich:element('uploadDocId')}
  .
    value = docId;
    #{rich:component('uploadPanel')}
  .
    show();
  }
</script>

<div class="panels--2">
<div class="panels__panel panel">
  <div class="panels__panel__header panel__header">
    <div class="panel__header__actions">
      <zanata:sortlist id="languages-language_sorting"
        sortAction="#{versionHomeAction.sortLanguageList()}"
        render="languages-language_form"
        sortingList="#{versionHomeAction.languageSortingList}"/>

      <div
        class="dropdown dropdown--header dropdown--small dropdown--right dropdown--inline js-dropdown">
        <a class="dropdown__toggle js-dropdown__toggle" href="#"
          title="#{messages['jsf.tooltip.MoreActions']}"
          data-original-title="#{messages['jsf.tooltip.MoreActions']}"><i
          class="i i--ellipsis"></i></a>
        <ul class="dropdown__content js-dropdown__content" role="content"
          aria-labelledby="dropdownContent">
          <s:fragment
            rendered="#{s:hasPermission(versionHomeAction.version, 'update')}">
            <li>
              <a
                href="#settings-languages" onclick="updateHashAndGotoUrl(this)">
                #{messages['jsf.ManageLanguage']} <i
                class="i i--settings i__item__icon"></i>
              </a>
            </li>
          </s:fragment>
        </ul>
      </div>


    </div>
    <h2 class="panel__heading">
      <i class="i--language i--left"></i>#{messages['jsf.Languages']}
    </h2>
  </div>
  <div class="panel__sub-header">
    <div class="panel__results">
      <div class="panel__results__type">
        <i class="i i--language txt--neutral"></i>
      </div>
        <span
          class="txt--meta"><strong>#{versionHomeAction.supportedLocale.size()}</strong></span>
    </div>
  </div>
  <h:form id="languages-language_form" styleClass="l--push-bottom-0">
    <s:fragment
      rendered="#{versionHomeAction.supportedLocale.isEmpty()}">
      <div class="l--pad-all-half">
        <p class="txt--meta">#{messages['jsf.NoActiveLanguages']}</p>
        <s:fragment
          rendered="#{s:hasPermission(versionHomeAction.version, 'update')}">
          <p>
            <a href="#settings-languages" class="button--primary"
              onclick="updateHashAndGotoUrl(this)">
              #{messages['jsf.AddLanguages']}
            </a>
          </p>
        </s:fragment>
      </div>
    </s:fragment>

    <s:fragment
      rendered="#{!versionHomeAction.supportedLocale.isEmpty()}">
      <ul class="list--stats" id="languages-language_list">
        <ui:repeat
          value="#{versionHomeAction.supportedLocale}"
          var="hLocale">
          <li
            class="progress-bar__expander">
            <a4j:commandLink
              action="#{versionHomeAction.setSelectedLocale(hLocale)}"
              render="languages-document_list, language-label, #{rich:clientId('documentFilter-size')}"
              onclick="updateActiveRow(this);toggleColumn('languages_content')"
              styleClass="bx--block">
              <div class="list__item">
                <div class="list__item__info">
                  <h3 class="list__title">
                    #{hLocale.retrieveDisplayName()} <i
                    class="i--right i--translate txt--neutral"></i>
                  </h3>
                </div>
                <s:div styleClass="list__item__stats"
                  rendered="#{versionHomeAction.pageRendered}">
                  <ui:param name="displayUnit"
                    value="#{versionHomeAction.getStatisticFigureForLocale(versionHomeAction.languageSortingList.selectedSortOption, hLocale.localeId)}"/>
                     <span class="stats--small #{displayUnit.cssClass}">
                        <span class="stats__figure">
                          #{displayUnit.figure}
                        </span>
                        <span class="stats__unit">
                          #{displayUnit.unit}
                        </span>
                     </span>
                </s:div>
              </div>

              <zanata:statistic
                value="#{versionHomeAction.getStatisticsForLocale(hLocale.localeId)}"
                rendered="#{versionHomeAction.pageRendered}"/>

              <zanata:loader type="large"
                rendered="#{!versionHomeAction.pageRendered}"/>
            </a4j:commandLink>
          </li>
        </ui:repeat>
      </ul>
    </s:fragment>
  </h:form>
</div>

<div class="panels__panel panel">
<div class="panels__panel__header panel__header">
  <div class="panel__header__actions">
    <zanata:sortlist id="languages-document_sorting"
      sortAction="#{versionHomeAction.sortProjectList(versionHomeAction.selectedLocale.localeId)}"
      render="languages-document_list"
      sortingList="#{versionHomeAction.documentSortingList}"/>

    <div
      class="dropdown dropdown--header dropdown--small dropdown--right dropdown--inline js-dropdown">
      <a class="dropdown__toggle js-dropdown__toggle" href="#"
        title="#{messages['jsf.tooltip.MoreActions']}"
        data-original-title="#{messages['jsf.tooltip.MoreActions']}"><i
        class="i i--ellipsis"></i></a>
      <ul class="dropdown__content js-dropdown__content" role="content"
        aria-labelledby="dropdownContent">

        <s:fragment
          rendered="#{projectIterationFilesAction.zipFileDownloadAllowed and projectIterationFilesAction.poProject}">
          <li>
            <a4j:commandLink
              styleClass="i__item--right"
              action="#{projectIterationZipFileAction.prepareIterationZipFile(projectIterationFilesAction.poProject)}"
              onclick="if(!downloadAllFilesClick()){ return false; }"
              render="downloadProgressBar"
              title="#{projectIterationFilesAction.zipFileDownloadTitle}">
              #{messages['jsf.iteration.files.DownloadAll']} <i
              class="i i--export i__item__icon"></i>
            </a4j:commandLink>
          </li>
        </s:fragment>

        <s:fragment
          rendered="#{projectIterationFilesAction.zipFileDownloadAllowed and not projectIterationFilesAction.poProject}">
          <li>
            <a4j:commandLink
              styleClass="i__item--right"
              action="#{projectIterationZipFileAction.prepareIterationZipFile(projectIterationFilesAction.poProject)}"
              onclick="if(!downloadAllFilesClick()){ return false; }"
              render="downloadProgressBar"
              title="#{projectIterationFilesAction.zipFileDownloadTitle}">
              #{messages['jsf.iteration.files.DownloadAllOfflinePo']} <i
              class="i i--export i__item__icon"></i>
            </a4j:commandLink>
          </li>
        </s:fragment>

        <s:fragment
          rendered="#{identity.loggedIn}">
          <li>
            <h:outputLink styleClass="i__item--right"
              onclick="return confirm('#{messages['jsf.ConfirmExportTMXIter']}')"
              value="#{request.contextPath}/rest/tm/projects/#{versionHomeAction.projectSlug}/iterations/#{versionHomeAction.versionSlug}?locale=#{versionHomeAction.selectedLocale.localeId.id}">
              <h:outputFormat
                value="#{messages['jsf.iteration.ExportTMX.Language']}">
                <f:param
                  value="#{versionHomeAction.selectedLocale.retrieveDisplayName}"/>
              </h:outputFormat>
              <i class="i i--export i__item__icon"></i>
            </h:outputLink>
          </li>
        </s:fragment>
      </ul>
    </div>
  </div>

  <a href="#" class="panel__header__back"
    onclick="removeActiveRows('languages-language_list');toggleColumn('languages_content')"
    title="#{messages['Languages']}">
    <i class="i--huge i--arrow-left" aria-hidden="true"></i>
  </a>

  <h2 class="panel__heading">
    <i class="i--left i--document"></i>
    <a4j:outputPanel id="language-label">
      #{versionHomeAction.selectedLocale.retrieveDisplayName()}
    </a4j:outputPanel>
    #{messages['jsf.Documents']}
  </h2>
</div>

<zanata:list-filter queryField="#{versionHomeAction.documentQuery}"
  getFilteredSize="#{versionHomeAction.filteredDocumentSize}"
  render="languages-document_list" id="documentFilter"
  iconClass="i--document"/>

<h:form id="languages-document_list" styleClass="l--push-bottom-0">
  <s:fragment
    rendered="#{versionHomeAction.selectedLocale == null}">
    <div class="l--pad-all-half">
      <p class="txt--meta">
        #{messages['jsf.SelectALanguageFromList']}
      </p>
    </div>
  </s:fragment>
  <s:fragment
    rendered="#{versionHomeAction.selectedLocale != null and versionHomeAction.filteredDocuments.isEmpty()}">
    <div class="l--pad-all-half">
      <p
        class="txt--meta">#{messages['jsf.iteration.NoDocumentsInVersion']}</p>
      <s:fragment
        rendered="#{s:hasPermission(versionGroupHome.instance, 'update')}">
        <p>
          <a href="#settings-documents" class="button--primary"
            onclick="updateHashAndGotoUrl(this)">
            #{messages['jsf.iteration.AddDocuments']}
          </a>
        </p>
      </s:fragment>
    </div>
  </s:fragment>
  <s:fragment
    rendered="#{versionHomeAction.selectedLocale != null and !versionHomeAction.filteredDocuments.isEmpty()}">
    <ul class="list--stats">
      <ui:repeat value="#{versionHomeAction.filteredDocuments}"
        var="document">

        <li class="progress-bar__expander list__item--actionable">
          <div class="list__item__action">
            <div
              class="dropdown dropdown--small dropdown--inline dropdown--single js-dropdown">
              <a class="dropdown__toggle js-dropdown__toggle txt--meta"
                title="" href="#"
                data-original-title="#{messages['jsf.tooltip.TranslateOptions']}">
                  <span class="is-invisible">
                    #{messages['jsf.tooltip.TranslateOptions']}
                  </span>
              </a>
              <ul class="dropdown__content js-dropdown__content">
                <s:fragment rendered="#{identity.loggedIn}">
                  <li>
                    <h:outputLink styleClass="i__item--right"
                      value="#{request.contextPath}/webtrans/Application.seam">
                      <f:param name="project"
                        value="#{versionHomeAction.projectSlug}"/>
                      <f:param name="iteration"
                        value="#{versionHomeAction.versionSlug}"/>
                      <f:param name="localeId"
                        value="#{versionHomeAction.selectedLocale.localeId}"/>
                      <f:param name="locale" value="#{locale.language}"/>
                      <s:fragment
                        rendered="#{projectIterationFilesAction.isUserAllowedToTranslate() or projectIterationFilesAction.isUserAllowedToReview()}">
                        #{messages['jsf.iteration.TranslateOnline']} <i
                        class="i i--translate i__item__icon"></i>
                      </s:fragment>
                      <s:fragment
                        rendered="#{!projectIterationFilesAction.isUserAllowedToTranslate() and !projectIterationFilesAction.isUserAllowedToReview()}">
                        #{messages['jsf.iteration.ViewOnline']} <i
                        class="i i--translate i__item__icon"></i>
                      </s:fragment>
                    </h:outputLink>
                  </li>
                </s:fragment>
                <s:fragment
                  rendered="#{projectIterationFilesAction.isPoDocument(document.docId)}">
                  <li>
                    <h:outputLink styleClass="i__item--right"
                      value="#{request.contextPath}/rest/file/translation/#{projectIterationFilesAction.projectSlug}/#{projectIterationFilesAction.iterationSlug}/#{projectIterationFilesAction.localeId}/po">
                      <f:param name="docId" value="#{document.docId}"/>
                      <h:outputText
                        value="#{messages['jsf.iteration.files.downloadForTranslation']}">
                        <f:param
                          value="#{messages['jsf.iteration.files.dotpo']}"/>
                      </h:outputText>
                      <i class="i i--export i__item__icon"></i>
                    </h:outputLink>
                  </li>
                </s:fragment>
                <s:fragment
                  rendered="#{projectIterationFilesAction.knownProjectType and !projectIterationFilesAction.isPoDocument(document.docId)}">
                  <li>
                    <h:outputLink styleClass="i__item--right"
                      value="#{request.contextPath}/rest/file/translation/#{projectIterationFilesAction.projectSlug}/#{projectIterationFilesAction.iterationSlug}/#{projectIterationFilesAction.localeId}/offlinepo"
                      title="#{messages['jsf.iteration.files.dotofflinepo.description']} #{messages['jsf.iteration.files.dotofflinepo.purpose']}">
                      <f:param name="docId" value="#{document.docId}"/>
                      <h:outputText
                        value="#{messages['jsf.iteration.files.downloadForTranslation']}">
                        <f:param
                          value="#{messages['jsf.iteration.files.dotofflinepo']}"/>
                      </h:outputText>
                      <i class="i i--export i__item__icon"></i>
                    </h:outputLink>
                  </li>
                </s:fragment>
                <s:fragment
                  rendered="#{!projectIterationFilesAction.knownProjectType}">
                  <li>
                    <h:outputLink styleClass="i__item--right"
                      value="#{request.contextPath}/rest/file/translation/#{projectIterationFilesAction.projectSlug}/#{projectIterationFilesAction.iterationSlug}/#{projectIterationFilesAction.localeId}/baked">
                      <f:param name="docId" value="#{document.docId}"/>
                      <h:outputText
                        value="#{messages['jsf.iteration.files.downloadForTranslation']}">
                        <f:param
                          value="#{projectIterationFilesAction.extensionOf(document.path, document.name)}"/>
                      </h:outputText>

                      <i class="i i--export i__item__icon"></i>
                    </h:outputLink>
                  </li>
                </s:fragment>
                <s:fragment
                  rendered="#{projectIterationFilesAction.fileUploadAllowed and projectIterationFilesAction.isUserAllowedToTranslate()}">
                  <li>
                    <a href="#"
                      onclick="openUploadPanel('#{document.docId}'); return false;"
                      class="i__item--right">
                      #{messages['jsf.Upload.Label']} <i
                      class="i i--import i__item__icon"></i>
                    </a>
                  </li>
                </s:fragment>
              </ul>
            </div>
          </div>
          <a href="#">
            <div class="list__item__content">
              <div class="list__item__info">
                <h3 class="list__title">#{document.name}</h3>
                <span class="list__item__meta">#{document.path}</span>
              </div>

              <s:div styleClass="list__item__stats"
                rendered="#{versionHomeAction.pageRendered}">
                <ui:param name="displayUnit"
                  value="#{versionHomeAction.getStatisticFigureForDocumentWithLocale(versionHomeAction.documentSortingList.selectedSortOption, versionHomeAction.selectedLocale.localeId, document.id)}"/>
               <span class="stats--small #{displayUnit.cssClass}">
                  <span class="stats__figure">
                    #{displayUnit.figure}
                  </span>
                  <span class="stats__unit">
                    #{displayUnit.unit}
                  </span>
               </span>
              </s:div>
            </div>
            <zanata:statistic
              value="#{versionHomeAction.getStatisticForDocument(document.id, versionHomeAction.selectedLocale.localeId)}"
              rendered="#{versionHomeAction.pageRendered}"/>

            <zanata:loader type="large"
              rendered="#{!versionHomeAction.pageRendered}"/>
          </a>
        </li>

      </ui:repeat>
    </ul>
  </s:fragment>
</h:form>
</div>
</div>

<rich:popupPanel id="downloadProgressPanel"
  moveable="#{false}"
  resizeable="#{false}"
  autosized="#{true}">

  <f:facet name="header">
    <h:outputText value="#{messages['jsf.iteration.files.ProcessDlgTitle']}"/>
  </f:facet>
  <h:form>
    <rich:progressBar id="downloadProgressBar"
      value="#{projectIterationZipFileAction.zipFilePrepHandle.currentProgress}"
      interval="500"
      label="#{messages['jsf.generatezip.ProgressLabel']}"
      minValue="-1"
      maxValue="#{projectIterationZipFileAction.zipFilePrepHandle.maxProgress - 1}"
      enabled="#{not projectIterationZipFileAction.zipFilePrepHandle.done}"
      ignoreDupResponses="true"
      reRenderAfterComplete="downloadProgressBar">
      <f:facet name="finish">
        <script type="text/javascript">
          #{rich:component('downloadProgressPanel')}.hide();
          window.location =
            "#{facesContext.externalContext.requestContextPath}/rest/file/download/#{projectIterationZipFileAction.zipFilePrepHandle.get()}";
        </script>
      </f:facet>
    </rich:progressBar>

    <div align="right">
      <a4j:commandButton id="closeProgressPanelButton"
        action="#{projectIterationZipFileAction.cancelFileDownload}"
        value="#{messages['jsf.Cancel']}"
        render="downloadProgressBar">
        <rich:componentControl for="downloadProgressPanel" operation="hide"
          event="onclick"/>
      </a4j:commandButton>
    </div>
  </h:form>
</rich:popupPanel>


<rich:popupPanel id="uploadPanel"
  moveable="#{false}"
  resizeable="#{false}"
  autosized="#{true}">
  <f:facet name="header">
    <h:outputText id="uploadPanelHeader"/>
  </f:facet>
  <h:form id="uploadForm" enctype="multipart/form-data">
    <!-- Could add warning for non-po documents,
         to note that po files must be offline-po format -->
    <s:fileUpload accept="*"
      data="#{projectIterationFilesAction.translationFileUpload.fileContents}"
      fileName="#{projectIterationFilesAction.translationFileUpload.fileName}"/>
    <br/>
    <h:outputText value="#{messages['jsf.iteration.files.Merge']}?"
      title="#{messages['jsf.iteration.files.Merge.title']}"/>
    <h:inputHidden id="uploadDocId"
      value="#{projectIterationFilesAction.translationFileUpload.docId}"/>
    <h:selectBooleanCheckbox
      value="#{projectIterationFilesAction.translationFileUpload.mergeTranslations}"
      title="#{messages['jsf.iteration.files.MergeCheckbox.Title']}"/>

    <div align="right">
      <h:commandButton value="#{messages['jsf.Upload']}"
        action="#{projectIterationFilesAction.uploadTranslationFile}"/>
      <h:commandButton value="#{messages['jsf.Cancel']}"
        onclick="return hideUploadPanel();"/>
    </div>
  </h:form>
</rich:popupPanel>

</ui:composition>

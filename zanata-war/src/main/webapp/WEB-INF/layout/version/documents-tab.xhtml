<ui:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:s="http://jboss.org/schema/seam/taglib"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:zanata="http://java.sun.com/jsf/composite/zanata"
  xmlns:a4j="http://richfaces.org/a4j"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:rich="http://richfaces.org/rich">

<script type="text/javascript">
  function openUploadDocPanel() {
    #{rich:component('uploadDocPanel')}
  .
    show();
    checkIfGeneralFileSelected()
    return false;
  }

  function checkIfGeneralFileSelected() {
    var fileInput = #{rich:element('generalDocFileUpload')};
    var submitButton = #{rich:element('generalDocSubmitUploadButton')};
    var errorMessage = document.getElementById('invalidFilenameError');
    checkIfFileSelected(fileInput, submitButton);
    var fileName = fileInput.value;
    var hasSemicolon = fileName !== undefined &amp;&amp;
      fileName.lastIndexOf(';') !== -1;
    if (hasSemicolon) {
      errorMessage.style.display = '';
      submitButton.disabled = true;
    } else {
      errorMessage.style.display = 'none';
    }
  }

  function checkIfFileSelected(fileInput, submitButton) {
    var noFileSelected = fileInput.value === undefined ||
      fileInput.value === "";
    submitButton.disabled = noFileSelected;
  }

</script>

<div class="panels--2">
  <div class="panels__panel panel">
    <div class="panels__panel__header panel__header">
      <div class="panel__header__actions">
        <zanata:sortlist id="documents-document_sorting"
          sortAction="#{versionHomeAction.sortDocumentList()}"
          render="documents-document_form"
          sortingList="#{versionHomeAction.documentSortingList}"/>

        <div
          class="dropdown dropdown--header dropdown--small dropdown--right dropdown--inline js-dropdown">
          <a class="dropdown__toggle js-dropdown__toggle" href="#"
            title=""
            data-original-title="#{messages['jsf.tooltip.MoreActions']}"><i
            class="i i--ellipsis"></i></a>
          <ul class="dropdown__content js-dropdown__content" role="content"
            aria-labelledby="dropdownContent">

          </ul>
        </div>
      </div>
      <h2 class="panel__heading">
        <i class="i--document i--left"></i>#{messages['jsf.Documents']}
      </h2>
    </div>

    <zanata:document-filter render="documents-document_list"
      id="DocumentsDocumentSearch"
      actionBean="#{versionHomeAction.documentTabDocumentFilter}"/>

    <h:form id="documents-document_form" styleClass="l--push-bottom-0">
      <s:fragment
        rendered="#{versionHomeAction.documentTabDocumentFilter.getPagedFilteredDocuments().isEmpty()}">
        <div class="l--pad-all-half">
          <p
            class="txt--meta">#{messages['jsf.iteration.NoDocumentsInVersion']}</p>
          <s:fragment
            rendered="#{projectIterationFilesAction.documentUploadAllowed}">
            <p>
              <a href="#" class="button--primary"
                data-original-title="#{messages['jsf.SupportedUploadFormats']}"
                onclick="openUploadDocPanel()">
                #{messages['jsf.UploadSourceDocuments']}
              </a>
            </p>
          </s:fragment>
        </div>
      </s:fragment>

      <s:fragment
        rendered="#{!versionHomeAction.documentTabDocumentFilter.getPagedFilteredDocuments().isEmpty()}">
        <ul class="list--stats" id="documents-document_list">
          <ui:repeat
            value="#{versionHomeAction.documentTabDocumentFilter.getPagedFilteredDocuments()}"
            var="document">
            <li class="progress-bar__expander">
              <a4j:commandLink
                action="#{versionHomeAction.setSelectedDocument(document)}"
                render="documents-language_list, document-label, documentsDocumentSearchRange, documentsDocumentSearchTotal, #{rich:clientId('export-options')}"
                onclick="updateActiveRow(this);toggleColumn('documents_content')"
                styleClass="bx--block">
                <div class="list__item">
                  <div class="list__item__info">
                    <h3 class="list__title">
                      #{hLocale.retrieveDisplayName()}

                      <s:fragment
                        rendered="#{versionHomeAction.isUserAllowedToTranslateOrReview(hLocale)}">
                        <i class="i--right i--translate txt--neutral"></i>
                      </s:fragment>
                    </h3>
                  </div>
                  <s:div styleClass="list__item__stats"
                    rendered="#{versionHomeAction.pageRendered}">
                    <ui:param name="displayUnit"
                      value="#{versionHomeAction.getStatisticFigureForLocale(versionHomeAction.languageSortingList.selectedSortOption, hLocale.localeId)}"/>
                   <span class="stats--small #{displayUnit.cssClass}">
                      <span class="stats__figure">
                        #{displayUnit.figure}
                      </span>
                      <span class="stats__unit">
                        #{displayUnit.unit}
                      </span>
                   </span>
                  </s:div>
                </div>

                <zanata:statistic
                  value="#{versionHomeAction.getDocumentStatistic(document.id)}"
                  rendered="#{versionHomeAction.pageRendered}"/>

                <zanata:loader rendered="#{!versionHomeAction.pageRendered}"/>
              </a4j:commandLink>
            </li>
          </ui:repeat>
        </ul>
      </s:fragment>
    </h:form>
  </div>
</div>

<rich:popupPanel id="uploadDocPanel"
  moveable="#{false}"
  resizeable="#{false}"
  autosized="#{true}"
  rendered="#{projectIterationFilesAction.documentUploadAllowed}">
  <f:facet name="header">
    <h:outputText value="#{messages['jsf.iteration.files.UploadDocument']}"/>
  </f:facet>
  <h:form id="uploadDocForm" enctype="multipart/form-data">
    <s:fileUpload id="generalDocFileUpload"
      accept="*"
      onchange="checkIfGeneralFileSelected();"
      data="#{projectIterationFilesAction.documentFileUpload.fileContents}"
      fileName="#{projectIterationFilesAction.documentFileUpload.fileName}"/>

    <div id="invalidFilenameError" style="display: none;
                                                      color: red;
                                                      padding: 5px;
                                                      margin-bottom: 5px;">
      #{messages['jsf.iteration.files.FilenameWithSemicolonNotSupported']}
    </div>
    <div>
      <h:outputLabel for="docPath"
        value="#{messages['jsf.iteration.files.DocumentPath']}"/>
      <h:inputText id="docPath"
        value="#{projectIterationFilesAction.documentFileUpload.documentPath}">
      </h:inputText>
    </div>
    <div>
      <h:selectOneMenu
        value="#{projectIterationFilesAction.documentFileUpload.sourceLang}">
        <s:selectItems
          value="#{projectIterationFilesAction.availableSourceLocales}"
          var="locale"
          label="#{locale.retrieveNativeName()}"
          itemValue="#{locale.localeId.toString()}"
          escape="true"/>
        <h:outputLabel value="#{messages['jsf.SourceLanguage']}"/>
      </h:selectOneMenu>
    </div>
    <rich:collapsiblePanel
      header="#{messages['jsf.iteration.files.CustomParams']}"
      switchType="client"
      expanded="false">
      <h:outputLabel for="adapterParams"
        value="#{messages['jsf.iteration.files.CustomParams.description']}"/>
      <br/>
      <h:inputTextarea id="adapterParams"
        value="#{projectIterationFilesAction.documentFileUpload.adapterParams}"/>
      <br/>
      <a target="_blank"
        href="https://github.com/zanata/zanata-server/wiki/Custom-document-parameters">
        #{messages['jsf.iteration.files.CustomParams.linkText']}
      </a>
    </rich:collapsiblePanel>

    <div align="right">
      <h:commandButton id="generalDocSubmitUploadButton"
        value="#{messages['jsf.Upload']}"
        action="#{projectIterationFilesAction.uploadDocumentFile}"/>
      <h:commandButton id="generalDocCancelUploadButton"
        value="#{messages['jsf.Cancel']}"
        onclick="return hideDocUploadPanel();"/>
    </div>
  </h:form>
</rich:popupPanel>
</ui:composition>